{"version":3,"sources":["components/Navbar.js","utils.js","services/api.js","services/eventsApi.js","components/event/EventSubmitButton.js","components/event/form_components/EventName.js","components/event/form_components/Invitees.js","components/event/form_components/Location.js","components/event/form_components/StartDateTime.js","components/event/form_components/EndDateTime.js","components/event/form_components/Description.js","components/event/EventForm.js","components/event/EventModal.js","components/event/EditEventButton.js","components/event/DeleteEventButton.js","components/event/EventCard.js","components/event/AddEventButton.js","components/event/EventsList.js","components/event/EventDashboard.js","components/event/EventProfile.js","containers/Home.js","components/form/FirstName.js","components/form/LastName.js","components/form/Email.js","components/form/Phone.js","components/form/Image.js","components/profile/ProfileModal.js","services/usersApi.js","components/profile/Account.js","utils/relationshipUtils.js","services/relationshipsApi.js","components/relationship/DeleteRelationshipButton.js","components/relationship/form_components/RelationshipType.js","components/relationship/form_components/ContactFrequency.js","components/relationship/RelationshipSubmitButton.js","components/relationship/RelationshipForm.js","components/relationship/RelationshipModal.js","components/relationship/EditRelationshipButton.js","components/relationship/RelationshipCard.js","components/relationship/AddRelationshipButton.js","components/relationship/RelationshipsList.js","components/relationship/RelationshipProfile.js","components/user/Signup.js","components/user/Login.js","services/authApi.js","App.js","serviceWorker.js","index.js"],"names":["ROOT_PATH","Navbar","props","localStorage","getItem","react_default","a","createElement","react_router_dom","className","to","concat","onClick","handleLogout","getDateSections","str","Date","toDateString","split","displayDay","_getDateSections","Object","slicedToArray","displayMonth","_getDateSections3","displayDate","_getDateSections5","displayYear","_getDateSections7","displayTime","_time$split","toTimeString","_time$split2","hour","min","meridiem","slice","showDate","_str$split","_str$split2","fullDate","time","_fullDate$split","_fullDate$split2","year","month","date","_time$split3","_time$split4","UTC","displayPhoneNumber","num","country","area","office","line","API_ROOT","auth_headers","token","headers","Access-Control-Allow-Origin","Content-Type","Accept","Authorization","evConfigObj","method","body","JSON","stringify","name","eventName","start_date","startDate","end_date","endDate","location","description","user_id","userId","getEvents","handleSetState","fetch","then","res","json","data","newRelEvent","event","relationship_id","inviteeId","event_id","id","refreshStateAfterPost","eventId","newEvent","handleNewEvent","getRelationship","relationships","relationshipId","relationship","updateRelationships","viewRelationship","updateRelEvent","relEvConfigObj","getEvent","console","log","updateEvents","EventSubmitButton","handleSubmit","preventDefault","handleClose","newEv","handleSubmitEdit","newInvitee","updatedEvent","relationship_events","updateEvent","Fragment","Button","variant","type","e","EventName","Form","Group","Label","Control","placeholder","value","onChange","ev","setEventName","target","Invitee","as","setInviteeId","first_name","last_name","length","map","key","Location","setLocation","StartDateTime","Row","Col","es","selected","setStartDate","minDate","subDays","showTimeSelect","showTimeSelectOnly","timeIntervals","dateFormat","timeCaption","EndDateTime","setEndDate","Description","setDescription","EventForm","_useState","useState","_useState2","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","useEffect","Modal","Body","form_components_EventName","Invitees","assign","form_components_Location","form_components_StartDateTime","form_components_EndDateTime","form_components_Description","Footer","ButtonToolbar","event_EventSubmitButton","EventModal","show","onHide","Header","closeButton","Title","event_EventForm","EditEvent","setShow","size","event_EventModal","DeleteEvent","events","handleDeletedEvent","deleteEvent","EventCard","viewEvent","EditEventButton","DeleteEventButton","displayButtons","AddEvent","EventsList","match","url","AddEventButton","event_EventCard","displayAllEvents","EventDashboard","upcomingEvents","future_events","pastEvents","past_events","Container","react_router","path","exact","render","browserHistory","event_EventsList","EventProfile","invitees","list","i","whoIsComing","_dateArray$toDateStri","_dateArray$toDateStri2","day","displayDateString","Home","user","FirstName","firstName","setFirstName","LastName","lastName","setLastName","Email","email","setEmail","Phone","phone","setPhone","Text","Image","image","setImage","ProfileModal","phone_number","handleEdit","formData","updateUserProfile","updateUser","form_FirstName","form_LastName","form_Email","form_Phone","form_Image","Account","first","last","src","alt","class","profile_ProfileModal","lastConnection","person","now","filtered","filter","parse","sort","b","mostRecentEvent","dateArr","toString","_dateArr","connectionGap","gapSecs","Math","abs","ceil","relConfigObj","relationship_type","relType","contact_frequency","getRelationships","DeleteRelationshipButton","handleOnClick","rels","handleDeletedRelationship","deleteRelationship","RelationshipType","setRelType","ContactFrequency","currentInterval","setCurrentInterval","toConsumableArray","Array","keys","val","RelationshipSubmitButton","newPerson","handleNewRelationship","newRelationship","rel","updateRelationship","RelationshipForm","_useState13","_useState14","form_components_RelationshipType","form_components_ContactFrequency","relationship_RelationshipSubmitButton","parseInt","RelationshipModal","relationship_RelationshipForm","EditRelationshipButton","relationship_RelationshipModal","RelationshipCard","relationship_EditRelationshipButton","relationship_DeleteRelationshipButton","AddRelationshipButton","RelationshipsList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","newOrder","state","listOrder","reverse","recentA","recentB","getTime","forEach","toLocaleString","setState","displayFilter","controlId","displayRelationships","relationship_RelationshipCard","displayRelationshipsPage","relationship_AddRelationshipButton","_state","Component","RelationshipProfile","findUpcomingEvents","gap","findGap","findPastEvents","message","connectionGapMessage","meetupReminder","Signup","setError","password","setPassword","persist","history","Accepts","signup","error","push","onSubmit","Login","login","handleLogin","App","isArray","updatedState","objectSpread","auth","jwt","setItem","logout","removeItem","eventView","futureEvents","updatedEvents","relationshipView","updatedRelationships","_this2","getCurrentUser","prevProps","prevState","_this3","components_Navbar","profile_Account","event_EventDashboard","event_EventProfile","relationship_RelationshipsList","relationship_RelationshipProfile","component","SignUp","user_Login","containers_Home","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.076d3652.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom';\n\n// TODO: check if token is available, and if so, render the home page with the following links\n      // Home, Account, Connections, Events\n// TODO: if token isn't available, render home page with the following links\n      // Home, Login, Signup\n\nconst ROOT_PATH = `/stay-connected`\n\nconst Navbar = props => {\n  if (!localStorage.getItem('token')) {\n    return (\n      <nav>\n        <NavLink className=\"nav-link\" to={ROOT_PATH}>Home</NavLink>\n        <NavLink className=\"nav-link\" to={`${ROOT_PATH}/login`}>Login</NavLink>\n        <NavLink className=\"nav-link\" to={`${ROOT_PATH}/signup`}>Sign Up</NavLink>\n      </nav>\n    )\n  } else {\n    return (\n      <nav>\n        <NavLink className=\"nav-link\" to={ROOT_PATH}>Home</NavLink>\n        <NavLink className=\"nav-link\" to={`${ROOT_PATH}/account`}>Account</NavLink>\n        <NavLink className=\"nav-link\" to={`${ROOT_PATH}/relationships`}>Connections</NavLink>\n        <NavLink className=\"nav-link\" to={`${ROOT_PATH}/events/upcoming`}>Events</NavLink>\n        <NavLink \n          to=\"/login\"\n          className=\"nav-link\" \n          onClick={() => {\n            props.handleLogout();\n          }\n        }>Logout</NavLink>\n        \n      </nav>\n      )\n  }\n}\n\nexport default Navbar","// EVENT FUNCTIONS\n\n\nconst getDateSections = str => {\n  let dateArray = new Date(str)\n  return dateArray.toDateString().split(\" \")\n\n}\n\nexport const displayDay = str => {\n  const [day] = getDateSections(str)\n  return day;\n}\n\nexport const displayMonth = str => {\n  const [, month] = getDateSections(str)\n  return month\n}\n\nexport const displayDate = str => {\n  const [, , date] = getDateSections(str)\n  return date\n}\n\nexport const displayYear = str => {\n  const [,,, year] = getDateSections(str)\n  return year\n}\n\nexport const displayDateString = (str) => {\n  let dateArray = new Date(str)\n  const [day, month, date, year] = dateArray.toDateString().split(\" \")\n  return `${day}, ${month} ${date}, ${year}`\n}\n\nexport const displayTime = str => {\n  let dateArray = new Date(str)\n  let time = dateArray.toTimeString().split(\" \")[0]\n  let [hour, min] = time.split(\":\")\n  let meridiem = \"am\"\n  if (hour === \"00\") {\n    hour = \"12\"\n  } else if (hour > 12) {\n    hour = hour - 12;\n    meridiem = \"pm\"\n  } else if (hour < 10) {\n    hour = hour.slice(1,2)\n  }\n  return `${hour}:${min} ${meridiem}`\n}\n\n// convert date to something friggin' useful\nexport const showDate = (str) => {\n  let [fullDate, time] = str.split(\"T\");\n  let [year, month, date] = fullDate.split(\"-\")\n  let [hour, min] = time.split(\":\")\n  return new Date(Date.UTC(year, month-1, date, hour, min))\n}\n\n// display invitees of event\nexport const displayInvitees = (event) => {\n  if (event.relationships && event.length !==0) {\n      return event.relationships.map(rel => {\n          return `${rel.first_name} ${rel.last_name}`\n      })\n  }\n}\n\n// display full name\nexport const fullName = (first, last) => {\n  return `${first} ${last}`\n}\n\n// filter past events\nexport const filterPastEvents = events => {\n  if (events && events.length !== 0) {\n    let now = new Date();\n    now = now.toISOString();\n    return events.filter(event => event.end_date < now).sort((a,b) => a.start_date > b.start_date ? -1 : 1)\n  }\n}\n\n// filter upcoming events\nexport const filterFutureEvents = events => {\n  if (events && events.length !== 0) {\n    let now = new Date();\n    now = now.toISOString();\n    return events.filter(event => event.end_date > now).sort((a,b) => a.start_date < b.start_date ? -1 : 1)\n  }\n}\n\n// lists all friends coming to an event \nexport const whoIsComing = invitees => {\n  if (invitees && invitees.length !== 0) {\n    let list = \"\"\n    let i = 0\n    while (i < invitees.length-1) {\n      list += `${invitees[i].first_name} ${invitees[i].last_name}, `;\n      i++;\n    }\n    list += `${invitees[i].first_name} ${invitees[i].last_name}`\n    return list\n  }\n}\n\nexport const displayPhoneNumber = num => {\n  if (num) {\n    let country = num.slice(0,2)\n    let area = num.slice(2,5)\n    let office = num.slice(5,8)\n    let line = num.slice(8)\n    return `${country} (${area}) ${office}-${line}`\n  } else {\n    return \"not given\"\n  }\n}","export const API_ROOT = `https://git.heroku.com/lit-taiga-97735.git`;\n\nexport const auth_headers = token => {\n  return ({\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${token}` \n    }\n  })\n}","import { API_ROOT, auth_headers } from './api';\n\nconst evConfigObj = (method, token, props) => {\n  return(\n    {\n      method: `${method}`,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n\n      }, \n      body: JSON.stringify({\n        name: props.eventName,\n        start_date: props.startDate,\n        end_date: props.endDate,\n        location: props.location,\n        description: props.description,\n        user_id: props.userId\n      })\n    }\n  )\n}\n\nconst relEvConfigObj = (method, token, props) => {\n  return(\n    {\n      method: `${method}`,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n\n      }, \n      body: JSON.stringify({\n        event_id: props.event.id,\n        relationship_id: props.inviteeId\n      })\n    }\n  )\n}\n\n// getEvents fetches all of authorized user's events and sets app's events state\nexport const getEvents = (token, handleSetState) => {\n  return (\n    fetch(`${API_ROOT}/events`, auth_headers(token))\n    .then(res => res.json())\n    .then(data => {\n      handleSetState(data)\n    })\n  )\n}\n\n// first, new event is created by authorized user\nexport const newEvent = props => {\n  let token = localStorage.getItem('token');\n  return fetch(`${API_ROOT}/events`, evConfigObj('POST', token, props))\n  .then(res => res.json())\n  .then(newEv => {\n\n    newRelEvent(newEv, token, props)\n  })\n}\n\n// next, relationshipEvent is created\nconst newRelEvent = (event, token, props) => {\n  return fetch(`${API_ROOT}/relationship_events`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }, \n    body: JSON.stringify({\n      relationship_id: props.inviteeId,\n      event_id: event.id\n    })\n  })\n  .then(res => res.json())\n  .then(data => {\n    // Todo: return data that contains the relationship and event objects, and directly handle refresh state with those objects already delivered \n    refreshStateAfterPost(data.event_id, token, props)\n  })\n}\n\n// after event and relationshipEvent creation, fetch event (because it has a relationship_id now)\n// handle new event in App.js\nconst refreshStateAfterPost = (eventId, token, props) => {\n  return fetch(`${API_ROOT}/events/${eventId}`, auth_headers(token))\n    .then(res => res.json())\n    .then(newEvent => {\n\n      props.handleNewEvent(newEvent);\n      getRelationship(newEvent.relationships[0].id, token, props);\n    })\n}\n\n// update relationship so that relationship reflects event addition\nconst getRelationship = (relationshipId, token, props) => {\n  return fetch(`${API_ROOT}/relationships/${relationshipId}`, auth_headers(token))\n  .then(res => res.json())\n  .then(relationship => {\n    props.updateRelationships(relationship);\n    props.viewRelationship(relationship);\n  })\n}\n\nexport const updateEvent = (event, props) => {\n  let token = localStorage.getItem('token');\n  let newInvitee = props.relationship.id !== props.inviteeId\n\n  return fetch(`${API_ROOT}/events/${event.id}`, evConfigObj('PATCH', token, props))\n  .then(res => res.json())\n  // consider if invitee form was changed. If there's a new invite, update relationship event.\n  // else just update the events\n  .then((updatedEvent) => {\n    if(newInvitee) {\n      console.log(\"new invite!\")\n      updateRelEvent(updatedEvent.relationship_events[0].id, token, event, props)\n    } else {\n      console.log(\"same old!\")\n      props.updateEvents(updatedEvent)\n    }\n  })\n}\n\nconst updateRelEvent = (id, token, event, props) => {\n  fetch(`${API_ROOT}/relationship_events/${id}`, relEvConfigObj('PATCH', token, props))\n  .then(res => res.json())\n  .then(data => {\n    // get the updated event to update the list of events in state\n    getEvent(data.event_id, token, props)\n    // update the new and old invitee\n    .then(getRelationship(data.relationship_id, token, props))\n    .then(getRelationship(event.relationships[0].id, token, props))\n  })\n}\n\n// Todo: this function is poorly worded. Should probably rename this to reflect its actual function\nconst getEvent = (eventId, token, props) => {\n  console.log('getting event')\n  return fetch(`${API_ROOT}/events/${eventId}`, auth_headers(token))\n  .then(res => res.json())\n  .then(event => {\n    props.updateEvents(event)\n  })\n} \n\nexport const deleteEvent = props => {\n  let token = localStorage.getItem('token');\n  fetch(`${API_ROOT}/events/${props.event.id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then(res => res.json())\n    .then(events => {\n      props.handleDeletedEvent(events)\n    })\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from \"react-bootstrap\";\nimport { newEvent, updateEvent } from '../../services/eventsApi';\n\nconst EventSubmitButton = props => { \n  // POST new event and relationship_event\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.handleClose();\n    newEvent(props);\n  }\n\n  // PATCH event\n  const handleSubmitEdit = event => {\n    event.preventDefault();\n    props.handleClose();\n    updateEvent(props.event, props);\n  }\n\n  const displaySubmitButton = () => {\n    return (props.handleNewEvent) ? <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSubmit(e)} >Create</Button> : <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSubmitEdit(e)}>Edit</Button>\n  }\n  \n  return (\n    <>\n    <Link to=\"/events/upcoming\">\n      {displaySubmitButton()}\n    </Link>\n    </>\n  )\n}\n\nexport default EventSubmitButton;","import React from 'react';\nimport {Form} from 'react-bootstrap'\n\nconst EventName = props => {\n  return (\n    <Form.Group>\n      <Form.Label>Event Name</Form.Label>\n      <Form.Control \n        type=\"text\"\n        placeholder=\"Enter event name\"\n        value={props.eventName}\n        onChange={(ev) => props.setEventName(ev.target.value)}\n      />\n    </Form.Group>\n  )\n}\n\nexport default EventName;","import React from 'react';\nimport {Form} from 'react-bootstrap';\n\nconst Invitee = props => {\n  \n  const displayNames = () => {\n\n    if (props.relationship) {\n      return (\n        <option value={props.relationship.id}>{`${props.relationship.first_name} ${props.relationship.last_name}`}</option>\n      )\n    } else if (props.relationships && props.relationships.length !== 0) {\n      return props.relationships.map(relationship => {\n        return (\n          <option key={relationship.id} value={relationship.id}>{`${relationship.first_name} ${relationship.last_name}`}</option>\n        )\n      })\n    }\n  }\n\n  return (\n    <Form.Group>\n      <Form.Label>Invite:</Form.Label>\n      <Form.Control as=\"select\" \n        value={props.inviteeId}\n        onChange={ev => {\n          props.setInviteeId(ev.target.value)\n        }}\n        onClick={ev=> console.log(ev.target.value)}\n        >\n        {displayNames()}\n      </Form.Control>\n    </Form.Group>\n  )\n}\n\nexport default Invitee;","import React from 'react'\nimport {Form} from 'react-bootstrap'\n\nconst Location = props => {\n  return(\n    <Form.Group>\n      <Form.Label>Location</Form.Label>\n      <Form.Control \n        type=\"text\"\n        placeholder=\"Enter event location\"\n        value={props.location}\n        onChange={ev => props.setLocation(ev.target.value)} />\n    </Form.Group>\n  )\n}\n\nexport default Location;","import React from 'react'\nimport {Form, Col} from \"react-bootstrap\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { subDays } from 'date-fns';\n\nconst StartDateTime = props => {\n  return (\n    <>\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>Start Date</Form.Label>\n        <DatePicker \n          selected={props.startDate} \n          onChange={date => {\n            props.setStartDate(date)} \n          }\n          minDate={subDays(new Date(), 0)}\n          />\n      </Form.Group>\n      <Form.Group as={Col}>\n        <Form.Label>Start Time</Form.Label>\n        <DatePicker\n          selected={props.startDate}       \n          onChange={time => props.setStartDate(time)}\n          showTimeSelect\n          showTimeSelectOnly\n          timeIntervals={30}\n          dateFormat=\"h:mm aa\" //hour, minute, am/pm\n          timeCaption=\"Time\"\n        />\n      </Form.Group>\n    </Form.Row>\n        </>\n  )\n}\n\nexport default StartDateTime;","import React from 'react'\nimport {Form, Col} from \"react-bootstrap\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { subDays } from 'date-fns';\n\nconst EndDateTime = props => {\n\n\n  return (\n    <>\n    <Form.Row>\n      <Form.Group as={Col}>\n        <Form.Label>End Date</Form.Label>\n        <DatePicker \n          selected={props.endDate} \n          onChange={date => props.setEndDate(date)} \n          minDate={subDays(props.startDate, 0)}\n          />\n      </Form.Group>\n      <Form.Group as={Col}>\n        <Form.Label>End Time</Form.Label>\n        <DatePicker\n          selected={props.endDate}\n          onChange={time => props.setEndDate(time)}\n          showTimeSelect\n          showTimeSelectOnly\n          timeIntervals={30}\n          dateFormat=\"h:mm aa\"\n          timeCaption=\"Time\"\n        />\n      </Form.Group>\n    </Form.Row>\n        </>\n  )\n}\n\nexport default EndDateTime;","import React from 'react';\nimport {Form} from 'react-bootstrap'\n\nconst Description = props => {\n  return (\n    <Form.Group>\n      <Form.Label>Description</Form.Label>\n      <Form.Control \n        type=\"text\"\n        placeholder=\"Enter event description\"\n        value={props.description}\n        onChange={(ev) => props.setDescription(ev.target.value)}\n      />\n    </Form.Group>\n  )\n}\n\nexport default Description;","import React, { useState, useEffect } from 'react'\nimport { Form, Button, ButtonToolbar, Modal } from \"react-bootstrap\";\nimport { showDate } from '../../utils'\nimport EventSubmitButton from './EventSubmitButton'\nimport EventName from './form_components/EventName';\nimport Invitees from './form_components/Invitees';\nimport Location from './form_components/Location';\nimport StartDateTime from './form_components/StartDateTime'\nimport EndDateTime from './form_components/EndDateTime'\nimport Description from './form_components/Description';\n\n// TODO: DEBUG THIS. can't read property id of undefined 16\nconst EventForm = props => {\n  const [eventName, setEventName] = useState(props.event ? props.event.name : '');\n  const [location, setLocation] = useState(props.event ? props.event.location : '');\n  const [description, setDescription] = useState(props.event ? props.event.description : '');\n  const [startDate, setStartDate] = useState(props.event ? showDate(props.event.start_date) : new Date());\n  const [endDate, setEndDate] = useState(props.event ? showDate(props.event.end_date) : startDate);\n  // const [inviteeId, setInviteeId] = useState(props.relationship ? props.event.relationships[0].id : props.relationship.id) \n  \n  // the purpose of someFunction, for now, is to determine what the contents of props are to therefore help determine whether to autofill the invited party state and section of the form\n  const somefunction = props => {\n    debugger;\n    // if props contains an event, this is an edit form. return the id of the associated connection.\n    if (props.event || props.relationship) {\n      debugger;\n      return props.relationship.id;\n    } else if (props.relationship) { // if props contains a relationship, we're creating a new event through a connection, return the connection's id\n      debugger;\n      return props.relationship.id\n    } else { // if props doesn't contain either of the above, this is a new event creation. Return the first connection as a default\n      debugger;\n      return props.relationships[0].id\n    }\n  }\n  // const [inviteeId, setInviteeId] = useState(props.event || props.relationship ? props.relationship.id : props.relationships[0].id)\n  const [inviteeId, setInviteeId] = useState(props.event || props.relationship ? props.relationship.id : props.relationships[0].id)\n\n  useEffect((endDate) => {\n    if(endDate < startDate) {\n      setEndDate(startDate)\n    }\n  }, [startDate])\n// Did it break? check this argument.\n\n  return (\n    <Form>\n      <Modal.Body>\n        {/* Event Name */}\n        <EventName eventName={eventName} setEventName={setEventName} />\n        {/* Invitee Name */}\n        <Invitees inviteeId={inviteeId} setInviteeId={setInviteeId} \n        // relationships={props.relationships} \n        {...props}\n        // relationships={props.relEventData.relationships} \n        />\n        {/* Location */}\n        <Location location={location} setLocation={setLocation} />\n        {/* Start Date, Time */}\n        <StartDateTime startDate={startDate} setStartDate={setStartDate} />\n        {/* End Date, Time */}\n        <EndDateTime endDate={endDate} setEndDate={setEndDate} startDate={startDate} />\n        {/* Description */}\n        <Description description={description} setDescription={setDescription}/>\n        {/* Send Notification? */}\n        {/* <Form.Check label=\"Send friend notifications about this event?\"/>  */}\n      </Modal.Body>\n\n      <Modal.Footer>\n        {/* Close, Confirm Buttons */}\n        <ButtonToolbar>\n          <Button variant=\"secondary\" onClick={() => props.handleClose()}>\n            Close\n          </Button>\n          <EventSubmitButton \n            {...props} \n            inviteeId={inviteeId} \n            eventName={eventName} \n            startDate={startDate} \n            endDate={endDate} \n            location={location} \n            description={description} \n          />\n        </ButtonToolbar>\n      </Modal.Footer>\n    </Form>\n  )\n}\n\nexport default EventForm;","import React from 'react';\nimport {Modal, Button} from \"react-bootstrap\";\nimport EventForm from './EventForm';\n\nconst EventModal = props => {\n  \n  const formType = () => props.handleNewEvent ? \"New Event\" : \"Edit Event\"\n\n  if (props.relationships.length > 0) {\n    return (\n      <>\n        <Modal show={props.show} onHide={() => props.handleClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>{formType()}</Modal.Title>\n          </Modal.Header>\n          \n          <EventForm \n            handleClose={props.handleClose} \n            {...props} \n            />\n        </Modal>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <Modal show={props.show} onHide={() => props.handleClose()}>\n          <Modal.Body>\n            <p>You'll need connections first before you can plan any events!</p>\n          </Modal.Body>\n            <Button variant=\"secondary\" onClick={() => props.handleClose()}>\n              Close\n            </Button>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default EventModal","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport EventModal from './EventModal'\n\n\nconst EditEvent = props => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const relationship = props.relationship ? props.relationship : props.event.relationships[0]\n  return (\n    <>\n    <Button className=\"edit-btn\" size=\"sm\" onClick={handleShow}>Edit</Button>\n    <EventModal show={show} handleClose={handleClose} updateEvents={props.updateEvents} event={props.event} relationship={relationship} relationships={props.relationships} updateRelationships={props.updateRelationships} viewRelationship={props.viewRelationship}\n     />\n    </>\n  )\n}\n\nexport default EditEvent","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { deleteEvent } from './../../services/eventsApi'\n\nconst DeleteEvent = props => {\n  \n  const handleOnClick = () => deleteEvent(props);\n\n  return (\n    <Button onClick={handleOnClick} className=\"delete-btn\" size=\"sm\">Cancel</Button>\n  )\n\n}\n\nexport default DeleteEvent;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {displayDay, displayMonth, displayDate, displayYear, displayTime} from '../../utils'\nimport EditEventButton from './EditEventButton'\nimport DeleteEventButton from './DeleteEventButton'\n\nconst EventCard = (props) => {\n  const displayButtons = () => {\n    if (props.relationships) {\n    return (\n        <>\n          <EditEventButton event={props.event} updateEvents={props.updateEvents} relationship={props.relationship} relationships={props.relationships} updateRelationships={props.updateRelationships} viewRelationship={props.viewRelationship} /> \n          <DeleteEventButton event={props.event} updateEvents={props.updateEvents} handleDeletedEvent={props.handleDeletedEvent} />\n        </>\n      )\n    } \n  }\n\n  return(\n    <div className=\"event-card\">\n      <span className=\"day\">{displayDay(props.event.start_date)}</span>\n      \n      <div className=\"event-date\">\n        <span className=\"month\">{displayMonth(props.event.start_date)}</span><br/>\n        <span className=\"date\">{displayDate(props.event.start_date)}</span><br/>\n        <span className=\"year\">{displayYear(props.event.start_date)}</span>\n      </div>\n      <div className=\"event-details\">\n          <Link to={\"/event/${props.event.name\"} onClick={() => props.viewEvent(props.event)} >\n            <span className=\"event-name\">{props.event.name}</span><br/>\n          </Link>\n          <span className=\"time\">{displayTime(props.event.start_date)}</span><br/>\n          <span className=\"location\">{props.event.location}</span><br/>\n          \n          {/* <span className=\"company\">with {props.event.relationships[0].first_name} {props.event.relationships[0].last_name}</span> */}\n      </div>\n      {displayButtons()} {/* Edit and Delete Buttons */}\n    </div>\n  )\n}\n\nexport default EventCard\n","import React, {useState} from 'react';\nimport { Button } from 'react-bootstrap';\nimport EventModal from './EventModal'\n\nconst AddEvent = props => {\n    // New Event Modal State\n    const [show, setShow] = useState(false);\n    // New Event Modal Handlers\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n  return (\n    <>\n      <Button className=\"alt-primary-btn .new-btn\" variant=\"primary\" size=\"sm\" onClick={handleShow}>New Event</Button>\n      <EventModal \n        show={show} \n        handleClose={handleClose} \n        handleNewEvent={props.handleNewEvent} \n        {...props}\n      />\n    </> \n  )\n}\n\nexport default AddEvent;","import React from 'react';\nimport EventCard from './EventCard';\nimport AddEventButton from './AddEventButton'\n\nconst EventsList = props => {\n\n  const displayAllEvents = () => {\n    if (props.events && props.events.length !== 0 ) {\n      return props.events.map(event => {\n        return <EventCard \n          key={event.id} \n          event={event}\n          viewEvent={props.viewEvent}\n          {...props}\n          />\n      })\n    }\n  }\n\n  const displayHeader = () => {\n    if (props.match && props.match.url === \"/events/past\") {\n      return <h3>Past Events</h3>\n    } else if (props.match && props.match.url === \"/events/upcoming\") {\n      return <h3>Upcoming Events</h3>\n    } else {\n      return (\n      <div className=\"connection-events\">\n      <h3>Upcoming Events</h3>\n      <AddEventButton \n        userId={props.userId}\n        relationship={props.relationship} \n        relationships={props.relationships} \n        viewRelationship={props.viewRelationship} \n        updateRelationships={props.updateRelationships} \n        handleNewEvent={props.handleNewEvent} />\n      </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"events-list\">\n      {displayHeader()}\n      {displayAllEvents()}\n    </div> \n  )\n}\n\nexport default EventsList","import React from 'react';\nimport {Button, Container} from 'react-bootstrap'\nimport {Link, Route} from 'react-router-dom'\nimport EventsList from './EventsList';\nimport AddEventButton from './AddEventButton';\n\nconst EventDashboard = props => {\n  \n  const upcomingEvents = props.events.future_events; \n  const pastEvents = props.events.past_events;\n  return (\n    <Container className=\"events-container\">\n      <h2>Events</h2>\n\n      <AddEventButton \n        userId={props.userId}  \n        relationships={props.relationships} \n        viewRelationship={props.viewRelationship}\n        updateRelationships={props.updateRelationships} \n        handleNewEvent={props.handleNewEvent} \n      />\n\n        <div className=\"events-1\">\n          <Link to={\"/events/past\"}><Button className=\"event-btn past-btn\">Past Events</Button></Link>\n        </div>\n        <div className=\"events-2\">\n          <Link to={\"/events/upcoming\"}><Button className=\"event-btn upcoming-btn\">Upcoming Events</Button></Link>\n        </div>\n      \n      <Route path={\"/events/upcoming\"} exact render={ (browserHistory) => <EventsList {...browserHistory} events={upcomingEvents} relationships={props.relationships} viewEvent={props.viewEvent} viewRelationship={props.viewRelationship} updateEvents={props.updateEvents} updateRelationships={props.updateRelationships} handleDeletedEvent={props.handleDeletedEvent}/> } />\n      <Route path={\"/events/past\"} exact render={ (browserHistory) => <EventsList {...browserHistory} events={pastEvents} viewEvent={props.viewEvent} /> } />\n    </Container>\n  )\n\n}\n\nexport default EventDashboard;","import React from 'react'\nimport {Container} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\nimport {whoIsComing, displayDateString, displayDay, displayMonth, displayDate, displayYear, displayTime} from '../../utils'\n\nconst EventProfile = props => {\n    if (props.event.name) {\n        return (\n            <Container className=\"event-profile\">\n                <div className=\"event-profile-card\">\n                    <span className=\"day\">{displayDay(props.event.start_date)}</span>\n\n                    <div className=\"event-date\">\n                        <span className=\"month\">{displayMonth(props.event.start_date)}</span><br/>\n                        <span className=\"date\">{displayDate(props.event.start_date)}</span><br/>\n                        <span className=\"year\">{displayYear(props.event.start_date)}</span>\n                    </div>\n                    \n                    <div className=\"event-profile-header\">\n                        <h3>{props.event.name ? props.event.name : null}</h3> \n                        <span>with {whoIsComing(props.event.relationships)}</span>\n                    </div>\n\n                    <div className=\"event-profile-subinfo\">\n                        <span>{displayDateString(props.event.start_date)} at {displayTime(props.event.start_date)}</span><br/>\n                        <span>{props.event.location}</span><br/>\n                    </div>\n                    <div className=\"event-description\">\n                        <p>More about this event:</p> \n                        <p>{props.event.description}</p>\n                    </div>\n                </div>\n               \n            </Container>\n        )\n    } else {\n        return <Redirect to=\"/events/upcoming\" />\n    }\n\n    \n}\n\nexport default EventProfile","import React from 'react'\nimport { Container, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst Home = props => {\n\n  // If a user isn't logged in yet, homepage will display a sign up button and login option\n  // else it will display a button that, when clicked, leads to user's connections page\n  const getStarted = () => !props.user ? <><Link to=\"/signup\"><Button variant=\"primary\">Get Started</Button></Link> or <Link to=\"/login\"> log in here</Link></> : <Link to=\"/relationships\"><Button variant=\"primary\">See my connections</Button></Link>\n\n  return (\n    <Container className=\"landing-page\">\n      <div className=\"jumbotron\">\n      <div className=\"bg-image\"></div>\n      <h1>Stay Connected</h1>\n      <p>Keep track of the connections you care about <br/>\n      and make plans for that next coffee date.</p>\n      <p>{getStarted()}</p>\n      </div>\n    </Container>\n  )\n}\n\nexport default Home;","import React from 'react'\nimport {Form, Col} from \"react-bootstrap\";\n\nconst FirstName = (props) => {\n  return (\n    <Form.Group as={Col}>          \n      <Form.Label>First Name</Form.Label>\n      <Form.Control\n        type=\"text\" \n        placeholder=\"Enter first name\" \n        value={props.firstName} \n        onChange={(ev) => props.setFirstName(ev.target.value)} />\n    </Form.Group>\n  )\n}\n\nexport default FirstName","import React from 'react'\nimport {Form, Col} from \"react-bootstrap\";\n\nconst LastName = (props) => {\n  return (\n    <Form.Group as={Col}>\n      <Form.Label>Last Name</Form.Label>\n      <Form.Control \n        type=\"text\" \n        placeholder=\"Enter last name\" \n        value={props.lastName} \n        onChange={(ev) => props.setLastName(ev.target.value)} />            \n    </Form.Group>\n  )\n}\n\nexport default LastName","import React from 'react'\nimport {Form} from \"react-bootstrap\";\n\nconst Email = (props) => {\n  return (\n    <Form.Group>\n      <Form.Label>Email</Form.Label>\n      <Form.Control \n        type=\"email\" \n        placeholder=\"Enter email\" \n        value={props.email} \n        onChange={(ev) => props.setEmail(ev.target.value)}\n        />\n    </Form.Group>\n  )\n}\n\nexport default Email","import React from 'react'\nimport {Form} from \"react-bootstrap\";\n\nconst Phone = (props) => {\n  return (\n    <Form.Group>\n      <Form.Label>Phone Number</Form.Label>\n      <Form.Control \n        type=\"text\" \n        placeholder=\"Enter phone number\" \n        value={props.phone}\n        onChange={(ev) => props.setPhone(ev.target.value)}\n        />\n        <Form.Text>\n          Include country code. Example: +1\n        </Form.Text>\n    </Form.Group>\n  )\n}\n\nexport default Phone","import React from 'react'\nimport {Form} from \"react-bootstrap\";\n\nconst Image = (props) => {\n  return (\n    <Form.Group>          \n      <Form.Label>Image Url</Form.Label>\n      <Form.Control \n        type=\"text\" \n        placeholder=\"Enter image url\" \n        value={props.image} \n        onChange={(ev) => props.setImage(ev.target.value)} />\n    </Form.Group>\n  )\n}\n\nexport default Image","import React, { useState, useEffect } from 'react'\nimport {Modal, Form, Button, ButtonToolbar} from \"react-bootstrap\";\nimport {updateUser} from './../../services/usersApi'\nimport FirstName from '../form/FirstName'\nimport LastName from '../form/LastName';\nimport Email from '../form/Email';\nimport Phone from '../form/Phone';\nimport Image from '../form/Image';\n\nconst ProfileModal = props => {\n  const [firstName, setFirstName] = useState(props.user.first_name)\n  const [lastName, setLastName] = useState(props.user.last_name)\n  const [email, setEmail] = useState(props.user.email)\n  const [phone, setPhone] = useState(props.user.phone_number)\n  const [image, setImage] = useState(props.user.image)\n\n  // TODO: finish setting state below\n  useEffect(() => {\n    setFirstName(props.user.first_name)\n    setLastName(props.user.last_name)\n    setEmail(props.user.email)\n    setPhone(props.user.phone_number)\n    setImage(props.user.image)\n  }, [props.user] )\n\n  const handleEdit = () => {\n    props.handleClose();\n    let formData = {\n      firstName: firstName, \n      last_name: lastName, \n      email: email,\n      phone: phone,\n      image: image\n    }\n    updateUser(props, formData)\n  }\n\n  return (\n    <>\n      <Modal show={props.show} onHide={() => props.handleClose()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Profile</Modal.Title>\n        </Modal.Header>\n        {/* Edit Profile Main Body */}\n        <Form>\n          <Modal.Body>\n            <Form.Row>\n              <FirstName firstName={firstName} setFirstName={setFirstName} />\n              <LastName lastName={lastName} setLastName={setLastName} />\n            </Form.Row>\n            <Email email={email} setEmail={setEmail} />\n            <Phone phone={phone} setPhone={setPhone} />\n            <Image image={image} setImage={setImage} />\n          </Modal.Body>\n        </Form>\n        <Modal.Footer>\n        {/* Close, Submit Buttons */}\n        <ButtonToolbar>\n          <Button variant=\"secondary\" onClick={() => props.handleClose()}>\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" onClick={() => handleEdit()}>\n            Edit\n          </Button>\n        </ButtonToolbar>\n      </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProfileModal","import { API_ROOT } from './api';\n\n// Upon user signup, create a new user\nexport const signup = formData => {\n  return (\n    fetch(`${API_ROOT}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json'\n      }, \n      body: JSON.stringify(formData)\n    })\n    .then(res => res.json())\n  )\n}\n\nexport const updateUser = (props, formData) => {\n  let token = localStorage.getItem('token');\n  fetch(`${API_ROOT}/account/${props.user.id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${token}` \n    }, \n    body: JSON.stringify({\n      first_name: formData.firstName,\n      last_name: formData.lastName,\n      email: formData.email,\n      phone_number: formData.phone,\n      image: formData.image\n    })\n  })\n  .then(res => res.json())\n  .then(data => props.updateUserProfile(data))\n}","import React, { useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { fullName, displayPhoneNumber } from '../../utils'\nimport ProfileModal from './ProfileModal'\n\nconst Account = props => { \n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Container className=\"profile-container\">\n\n          <img src={`${props.user.image}`} className=\"profile-img\" alt={`${props.user.first_name} ${props.user.last_name}`}/>\n        <div className=\"profile-info\">\n          <h1>{fullName(props.user.first_name, props.user.last_name)}</h1>\n          <p><i class=\"fas fa-envelope\"></i> Email: {props.user.email}</p>\n          <p><i class=\"fas fa-mobile-alt\"></i> Phone: {displayPhoneNumber(props.user.phone_number)}</p>\n        </div>\n          <Button size=\"sm\" className=\"profile-edit-btn alt-primary-btn\" onClick={() => handleShow()} >Edit</Button>\n        \n        <ProfileModal show={show} handleClose={handleClose} user={props.user} updateUserProfile={props.updateUserProfile} />\n      </Container>\n    </>\n  )\n}\n\nexport default Account","export const connectionGapMessage = (person, gap) => {\n  if (gap !== null) {\n    const message = `You met up with ${person.first_name}`;\n    return gap === 1 ? `${message} yesterday.` : `${message} ${gap} days ago.`\n  } else {\n    return `You haven't met up with ${person.first_name} yet! \n    They'd probably love it if you invited them to coffee!`\n  }\n}\n\nexport const meetupReminder = (person, gap) => {\n  if (gap !== null && gap >= person.contact_frequency) {\n    return `It's been a while. I think it's time to make plans to get together!`\n  }\n}\n\nexport const findGap = pastEvents => {\n  if(pastEvents && pastEvents.length > 0) {\n    return connectionGap(pastEvents[0].end_date);\n  } else {\n    return null;\n  }\n}\n\nexport const findUpcomingEvents = events => {\n  const now = Date.now();\n  if (events && events.length) {\n    let futureEvents = events.filter(event => Date.parse(event.start_date) > now)\n    return futureEvents.sort((a,b) => a.start_date < b.start_date ? -1 : 1)\n  } else {\n    return [];\n  }\n}\n\nexport const findPastEvents = events => {\n  const now = Date.now();\n  if (events && events.length) {\n    let prevEvents = events.filter(event => Date.parse(event.start_date) < now)\n    return prevEvents.sort((a,b) => a.start_date > b.start_date ? -1 : 1)\n  } else {\n    return [];\n  }\n}\n// reports a date string of last event with relationship\nexport const lastConnection = person => {\n  // if the person has at least one event\n  if (person.events.length > 0) {\n    // get the current time in seconds\n    const now = Date.now();\n    // filter the dates so that we only get past dates\n    const filtered = person.events.filter(ev => Date.parse(ev.end_date) < now).sort((a,b) => a.end_date - b.end_date)\n    // if there were any past events\n    if (filtered.length > 0) {\n      // find the most recent past event\n      const mostRecentEvent = filtered[filtered.length - 1];\n      // convert date to date object\n      const endTime = new Date(mostRecentEvent.end_date)\n      // convert date object to string\n      const dateArr = endTime.toString().split(\" \");\n      const [day, month, date, year] = dateArr;\n      return `${day} ${month} ${date}, ${year}`\n    }\n  }\n  return \"You haven't met up yet!\"\n}\n\n// The amt of time between now and the last event\nexport const connectionGap = date => {\n  const now = Date.now();\n  const last = Date.parse(date);\n  const gapSecs = Math.abs(now - last);\n  const gapDays = Math.ceil(gapSecs/(60*60*24*1000));\n  return gapDays;\n}","import { API_ROOT, auth_headers} from './api';\n\nconst relConfigObj = (method, token, props) => {\n  return(\n    {\n      method: `${method}`,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }, \n      body: JSON.stringify({\n        first_name: props.firstName,\n        last_name: props.lastName,\n        relationship_type: props.relType,\n        image: props.image,\n        email: props.email,\n        phone_number: props.phone,\n        contact_frequency: props.contact_frequency,\n        user_id: props.userId\n      })\n    }\n  )\n}\n\n// getRelationships fetches authorized user's relationships and sets app's relationships state\nexport const getRelationships = (token, handleSetState) => {\n  return (\n    fetch(`${API_ROOT}/relationships`, auth_headers(token))\n    .then(res => res.json())\n    .then(data => {\n      handleSetState(data)\n    })\n  )\n}\n\nexport const getRelationship = (person, viewRelationship) => {\n  let token = localStorage.getItem('token');\n  fetch(`${API_ROOT}/relationships/${person.id}`, auth_headers(token))\n  .then(res => res.json())\n  .then(data => viewRelationship(data))\n}\n\n\n// newRelationship posts authorized user's new relationship, then adds new relationship existing list in state\nexport const newRelationship = props => {\n  let token = localStorage.getItem('token');\n  fetch(`${API_ROOT}/relationships`, relConfigObj('POST', token, props))\n  .then(res => res.json())\n  .then(newPerson => props.handleNewRelationship(newPerson))\n}\n\n// updateRelationship patches authorized user's existing relationship, and replaces existing instance in state\nexport const updateRelationship = props => {\n  let token = localStorage.getItem('token');\n  fetch(`${API_ROOT}/relationships/${props.relationship.id}`, relConfigObj('PATCH', token, props))\n  .then(res => res.json())\n  .then(rel => {\n    props.updateRelationships(rel)\n    props.viewRelationship(rel)\n  })\n}\n\nexport const deleteRelationship = props => {\n  let token = localStorage.getItem('token');\n  fetch(`${API_ROOT}/relationships/${props.relationship.id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then(res => res.json())\n    .then(rels => {\n      // props.updateRelationships(rels);\n      props.handleDeletedRelationship(rels);\n      // TODO fetch updated events and set to state\n      // fetch(`http://localhost:3000/users/1/events`)\n      // .then(res => res.json())\n      // .then(events => props.updateEvents(events))\n    })\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { deleteRelationship } from '../../services/relationshipsApi';\n\nconst DeleteRelationshipButton = props => {\n  \n  const handleOnClick = () => deleteRelationship(props);\n\n  return (\n    <>\n      <Button className=\"rel-delete-btn\" size=\"sm\" onClick={() => handleOnClick()}>Remove</Button>\n    </>\n  )\n}\n\nexport default DeleteRelationshipButton;","import React from 'react'\nimport {Form} from \"react-bootstrap\";\n\nconst RelationshipType = (props) => {\n  return (\n    <Form.Group>\n      <Form.Label>Relationship Type</Form.Label>\n      <Form.Control \n        as=\"select\" \n        value={props.relType} \n        onChange={(ev) => props.setRelType(ev.target.value)}            \n        >\n        <option>Friend</option>\n        <option>Co-worker</option>\n        <option>Classmate</option>\n        <option>Family</option>\n        <option>Significant Other</option>\n        <option>Other</option>\n      </Form.Control>\n    </Form.Group>  \n  )\n}\n\nexport default RelationshipType","import React from 'react'\nimport {Form} from \"react-bootstrap\";\n\nconst ContactFrequency = props => {\n  \n  const displayIntervals = () => {\n    return [...Array(99).keys()].map(val => {\n      let day = \"day\";\n      if ((val + 1) !== 1){\n        day = \"days\"\n      } \n      \n      return <option key={val + 1} value={val+1}>{val + 1} {day}</option>\n    })\n  }\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>How often do you want to connect?</Form.Label>\n        <Form.Control \n          as=\"select\" \n          value={props.currentInterval}\n          onChange={(ev) => {\n            props.setCurrentInterval(ev.target.value)\n          }}            \n          >\n          {displayIntervals()}\n        </Form.Control>\n      </Form.Group>\n    </>\n  )\n}\n\nexport default ContactFrequency;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { newRelationship, updateRelationship } from '../../services/relationshipsApi';\n\nconst RelationshipSubmitButton = props => {\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    props.handleClose();\n    // If user doesn't provide a url, use a default image\n    // TODO: let's see if we can move this server-side later\n\n    newRelationship(props);\n  }\n\n  const handleSubmitEdit = event => {\n    event.preventDefault();\n    props.handleClose();\n    \n    updateRelationship(props);\n  }\n\n  const displaySubmitButton = () => props.handleNewRelationship ? <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSubmit(e)}>Create</Button> : <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSubmitEdit(e)}>Edit</Button>\n  \n  return(\n    <div>\n      {displaySubmitButton()}\n    </div>\n  )\n}\n\nexport default RelationshipSubmitButton;","import React, { useState } from 'react'\nimport { Form, Button, ButtonToolbar, Modal } from \"react-bootstrap\";\n// Form Components\nimport FirstName from '../form/FirstName';\nimport LastName from '../form/LastName';\nimport RelationshipType from './form_components/RelationshipType';\nimport Phone from '../form/Phone';\nimport Email from '../form/Email'\nimport Image from '../form/Image'\nimport ContactFrequency from './form_components/ContactFrequency'\n\nimport RelationshipSubmitButton from './RelationshipSubmitButton'\n\nconst RelationshipForm = props => {\n  const [firstName, setFirstName] = useState(props.relationship ? props.relationship.first_name : '');\n  const [lastName, setLastName] = useState(props.relationship ? props.relationship.last_name : '');\n  const [relType, setRelType] = useState(props.relationship ? props.relationship.relationship_type : 'Friend');\n  const [email, setEmail] = useState(props.relationship ? props.relationship.email : '');\n  const [phone, setPhone] = useState(props.relationship ? props.relationship.phone_number : '');\n  const [image, setImage] = useState(props.relationship ? props.relationship.image : '');\n  const [currentInterval, setCurrentInterval] = useState(props.relationship ? props.relationship.contact_frequency : 7);\n\n  return (\n    \n    <Form>\n      <Modal.Body>\n        {/* First, Last Name */}\n        <Form.Row>\n          <FirstName firstName={firstName} setFirstName={setFirstName} />\n          <LastName lastName={lastName} setLastName={setLastName} />\n        </Form.Row>\n\n        {/* Relationship Type, Email, Phone, Image */}\n        <RelationshipType relType={relType} setRelType={setRelType} />\n        <Email email={email} setEmail={setEmail} />\n        <Phone phone={phone} setPhone={setPhone} />\n        <Image image={image} setImage={setImage} />\n        {/* Notification Frequency */}\n        <ContactFrequency currentInterval={currentInterval} setCurrentInterval={setCurrentInterval} />\n      </Modal.Body>\n\n      <Modal.Footer>\n        {/* Close, Submit Buttons */}\n        <ButtonToolbar>\n          <Button variant=\"secondary\" onClick={() => props.handleClose()}>\n            Close\n          </Button>\n          <RelationshipSubmitButton {...props} firstName={firstName} lastName={lastName} relType={relType} email={email} phone={phone} image={image} contact_frequency={parseInt(currentInterval)} />\n        </ButtonToolbar>\n      </Modal.Footer>\n    </Form>\n  )\n}\n\nexport default RelationshipForm;","import React from 'react'\nimport { Modal } from \"react-bootstrap\";\nimport RelationshipForm from './RelationshipForm'\n\nconst RelationshipModal = props => {\n\n  const formType = () => props.handleNewRelationship ? \"New Relationship\" : \"Edit Relationship\";\n\n  return (\n    <>\n      <Modal show={props.show} onHide={() => props.handleClose()}>\n        <Modal.Header closeButton>\n          <Modal.Title>{formType()}</Modal.Title>\n        </Modal.Header>\n        \n        <RelationshipForm handleClose={props.handleClose} {...props} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RelationshipModal;","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap'\nimport RelationshipModal from './RelationshipModal'\n\nconst EditRelationshipButton = props => {\n  // show dictates visibility of edit modal\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button className=\"rel-edit-btn profile-edit-btn\" size=\"sm\" onClick={() => handleShow()} >Edit</Button>\n      <RelationshipModal \n        show={show} \n        handleClose={handleClose} \n        relationship={props.relationship} \n        viewRelationship={props.viewRelationship}\n        updateRelationships={props.updateRelationships}\n        userId={props.userId}\n      />\n    </>\n  )\n}\n\nexport default EditRelationshipButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { lastConnection } from '../../utils/relationshipUtils'\nimport DeleteRelationshipButton from './DeleteRelationshipButton'\nimport EditRelationshipButton from './EditRelationshipButton';\n\nconst RelationshipCard = props => {\n  const person = props.relationship;\n\n  return(\n      <div className='relationship-card'>\n        {/* Card Image */}\n        <div className=\"image-container\">\n          <Link to={`/relationships/${person.id}`} onClick={() => props.viewRelationship(person)} >\n                <img src={`${person.image}`} alt={`${person.first_name} ${person.last_name}`} />\n          </Link>\n        </div>\n\n        {/* Card Info: name, connection, last met */}\n        <div>\n          <Link to={`/relationships/${person.id}`} onClick={() => props.viewRelationship(person)} >\n            <span className=\"name\">{`${person.first_name} ${person.last_name}`}</span><br/><br/>\n          </Link>\n          <span className=\"connection\"><i class=\"fas fa-user\"></i>{person.relationship_type}</span><br/>\n          <span>Last met: {lastConnection(person)}</span><br/>\n        </div>\n        \n        {/* Buttons */}\n        <EditRelationshipButton \n          relationship={person} \n          viewRelationship={props.viewRelationship} \n          updateRelationships={props.updateRelationships} \n          userId={props.userId} \n        />\n        <DeleteRelationshipButton \n          relationship={person} \n          handleDeletedRelationship={props.handleDeletedRelationship}\n          updateEvents={props.updateEvents}\n        />\n      </div>\n  )\n}\n\nexport default RelationshipCard;","import React, {useState} from 'react';\nimport {Button} from 'react-bootstrap'\nimport RelationshipModal from './RelationshipModal'\n\nconst AddRelationshipButton = props => {\n    // modal state\n    const [show, setShow] = useState(false);\n    // modal handlers\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button size=\"sm\" className=\"new-btn\" onClick={() => handleShow()}>New Connection</Button>\n      <RelationshipModal show={show} handleClose={handleClose} handleNewRelationship={props.handleNewRelationship} userId={props.userId} />\n    </>\n  )\n}\n\nexport default AddRelationshipButton;","import React, { Component } from \"react\";\nimport RelationshipCard from \"./RelationshipCard\";\nimport AddRelationshipButton from './AddRelationshipButton'\nimport { Container, Form } from 'react-bootstrap'\n\nclass RelationshipsList extends Component {\n  constructor(props) {\n    super(props)\n    // this.state = {listOrder: this.props.relationships}\n  }\n  \n  static getDerivedStateFromProps(props, _state) {\n    return {listOrder: props.relationships}\n    // return {listOrder: props.relationships.sort((a,b) => a.created_at > b.created_at ? -1 : 1)}\n  }\n  \n  handleChange = val => {\n    let newOrder = this.state.listOrder;\n    switch(val) {\n      case \"first_az\":\n        newOrder = this.state.listOrder.sort((a,b) => a.first_name < b.first_name ? -1 : 1);\n        break;\n      case \"first_za\":\n        newOrder = this.state.listOrder.sort((a,b) => a.first_name > b.first_name ? -1 : 1)\n        break;\n      case \"last_az\":\n        newOrder = (this.state.listOrder.sort((a,b) => a.last_name < b.last_name ? -1 : 1))\n        break;\n      case \"last_za\":\n        newOrder = (this.state.listOrder.sort((a,b) => a.last_name > b.last_name ? -1 : 1))\n        break;\n      case \"most_recent\":\n        newOrder = this.state.listOrder.sort((a,b) => mostRecentEvent(a,b))\n        break;\n      case \"least_recent\":\n        newOrder = this.state.listOrder.sort((a,b) => mostRecentEvent(a,b)).reverse()\n        break;\n      case \"most_freq\":\n        newOrder = (this.state.listOrder.sort((a,b) => b.events.length - a.events.length))\n        break;\n      case \"least_freq\":\n        newOrder = (this.state.listOrder.sort((a,b) => a.events.length - b.events.length))\n        break;\n      default:\n        break;\n    }\n    this.setState({listOrder: newOrder});\n\n    function mostRecentEvent(a, b) {\n      let recentA = 0;\n      let recentB = 0;\n      let now = (new Date()).getTime()\n\n      a.events.forEach(ev => {\n        let endDate = new Date(ev.end_date.toLocaleString()).getTime()\n        if (endDate < now && endDate > recentA) {\n          recentA = endDate\n        }\n      })\n      b.events.forEach(ev => {\n        let endDate = new Date(ev.end_date.toLocaleString()).getTime()\n        if (endDate < now && endDate > recentB) {\n          recentB = endDate\n        }\n      })\n      return recentA > recentB ? -1 : 1\n    }\n  }\n\n  displayFilter = () => {\n    return(\n      <div className=\"reorder-select\">\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Order by:</Form.Label>\n            <Form.Control as=\"select\"\n            onChange={ev => {\n              this.handleChange(ev.target.value)\n            }}>\n              <option value=\"first_az\">First Name Alphabetically A-Z</option>\n              <option value=\"first_za\">First Name Alphabetically Z-A</option>\n              <option value=\"last_az\">Last Name Alphabetically A-Z</option>\n              <option value=\"last_za\">Last Name Alphabetically Z-A</option>\n              <option value=\"most_recent\">Most Recently Seen</option>\n              <option value=\"least_recent\">Least Recently Seen</option>\n              <option value=\"most_freq\">Most Frequently Seen</option>\n              <option value=\"least_freq\">Least Frequently Seen</option>\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n  \n  // show all relationships\n  displayRelationships = () => {\n    if(this.state.listOrder.length !== 0) {\n      return this.state.listOrder.map(rel => {\n        return (\n          <RelationshipCard\n            key={rel.id}\n            userId={this.props.userId}\n            relationship={rel}\n            viewRelationship={this.props.viewRelationship}\n            updateRelationships={this.props.updateRelationships}\n            handleDeletedRelationship={this.props.handleDeletedRelationship}\n            updateEvents={this.props.updateEvents}\n          />\n        );\n      });\n    }\n  }\n\n  // display page\n  displayRelationshipsPage = () => {\n    if (this.props.relationships && this.props.relationships.length !== 0) {\n      return (\n        <>\n          {this.displayFilter()}\n          <div className=\"relationships-list\">\n          {this.displayRelationships()}\n          </div>\n        </>\n      )\n    } else if (this.props.relationships && this.props.relationships.length === 0) {\n      return (\n        <div>\n          <h4>You're not tracking any relationships!</h4>\n        </div>\n      )\n    }\n  };\n\n  render() {\n    return (\n      <Container className=\"relationships-container\">\n        <h2>Connections</h2>\n        <AddRelationshipButton \n          userId={this.props.userId} \n          handleNewRelationship={this.props.handleNewRelationship} \n        />\n        {this.displayRelationshipsPage()}    \n      </Container>\n    );\n  }\n};\n\nexport default RelationshipsList;\n","import React from 'react'\nimport {Container} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\nimport EditRelationshipButton from './EditRelationshipButton'\nimport {displayPhoneNumber} from '../../utils'\nimport {findUpcomingEvents, findPastEvents, findGap, connectionGapMessage, meetupReminder, lastConnection} from '../../utils/relationshipUtils'\nimport EventsList from '../event/EventsList'\n\nconst RelationshipProfile = props => {\n  const person = props.relationship;\n  const events = person.events;\n  \n  const upcomingEvents = findUpcomingEvents(events);\n  const pastEvents = findPastEvents(events);\n\n  const gap = findGap(pastEvents);\n\n  if(props.relationship.first_name) {\n    return (\n      <Container className=\"profile-container\">\n          <img src={`${person.image}`} className=\"profile-img\" alt={`${person.first_name} ${person.last_name}`}/>\n          <div className=\"profile-info\">\n            <h1>{person.first_name} {person.last_name}</h1><br/>\n            \n            <span className=\"connection\"><i class=\"fas fa-user\"></i>{person.relationship_type}</span><br/>\n            <span><i class=\"fas fa-envelope\"></i> Email: {person.email}</span><br/>\n            <span><i class=\"fas fa-mobile-alt\"></i> Phone: {displayPhoneNumber(person.phone_number)}</span><br/>\n          </div>\n\n\n            <EditRelationshipButton relationship={props.relationship}\n            viewRelationship={props.viewRelationship} \n            updateRelationships={props.updateRelationships}\n          />\n\n\n          <div className=\"reminders\">\n            <p>Reminders:</p>\n            <span>{connectionGapMessage(person, gap)} </span>\n            <span>{meetupReminder(person, gap)}</span><br/>\n          </div>\n\n          <div className=\"profile-stats\">\n            <p><span>Last meetup:</span><br/>\n             {lastConnection(person)}</p>\n            {/* <p>Next meetup:<br/>\n            {nextMeetup(person)}</p> */}\n            <p><span>Meetup cycle:</span><br/>\n             Every {person.contact_frequency} days</p><br/>\n          </div>\n\n          <EventsList \n            userId={props.userId}\n            relationship={props.relationship} \n            relationships={props.relationships} \n            viewRelationship={props.viewRelationship} \n            updateRelationships={props.updateRelationships} \n            events={upcomingEvents} \n            viewEvent={props.viewEvent} \n            handleNewEvent={props.handleNewEvent}\n            updateEvents={props.updateEvents}\n            handleDeletedEvent={props.handleDeletedEvent}\n            />\n\n\n      </Container>\n    )\n  } else {\n    return <Redirect to=\"/relationships\" />\n  }\n\n    \n}\n\nexport default RelationshipProfile","import React, {useState} from \"react\";\nimport {Container, Button, Form} from 'react-bootstrap';\nimport {signup} from '../../services/usersApi';\n\nconst Signup = props => {\n  const [error, setError] = useState(false)\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const handleChange = ev => {\n    ev.persist()\n    switch(ev.target.name) {\n      case 'first_name':\n        setFirstName(ev.target.value);\n        break;\n      case 'last_name':\n        setLastName(ev.target.value);\n        break;\n      case 'email':\n        setEmail(ev.target.value);\n        break;\n      case 'password':\n        setPassword(ev.target.value);\n        break;\n      default:\n        return null;\n    }\n  }\n  \n  const handleSubmit = (ev, history) => {\n    ev.preventDefault();\n    ev.persist();\n    \n    // push all form data into a single packaged array\n    let formData = {}\n    for(let i = 0; i < ev.target.length - 1; i++) {\n      formData[ev.target[i].name] = (ev.target[i].value)\n    }\n\n    // deliver form data to signup\n    signup(formData).then(res => {\n      // if signup is successful, redirect to login\n      if (!res.error) {\n        props.history.push('/login');\n      // if not, remain on page\n      } else {\n        setError(true);\n        console.log('signup failed');\n      }\n    })\n  }\n\n  return (\n    <Container>  \n      <h3>New User Signup</h3>\n\n      <Form onSubmit={ev => handleSubmit(ev, props.history)}>\n        <Form.Group>\n          <Form.Label>First Name</Form.Label>\n          <Form.Control type=\"text\" name=\"first_name\" placeholder=\"First Name\" value={firstName} onChange={ev => handleChange(ev)}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control type=\"text\" name=\"last_name\" placeholder=\"Last Name\" value={lastName} onChange={ev => handleChange(ev)}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>User Email</Form.Label>\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={ev => handleChange(ev)}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>User Password</Form.Label>\n          <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={ev => handleChange(ev)}/>\n        </Form.Group>\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n    </Container>\n  )\n}\n\nexport default Signup;","import React, {useState} from \"react\";\nimport {Container, Button, Form} from 'react-bootstrap';\nimport {login} from '../../services/authApi'\n\nconst Login = props => {\n  // local state for controlled login form input\n  const [error, setError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // handleChange takes in new input and sets it its respective states\n  const handleChange = ev => {\n    ev.persist();\n    switch(ev.target.name) {\n      case 'email':\n        setEmail(ev.target.value);\n        break;\n      case 'password':\n        setPassword(ev.target.value);\n        break;\n      default:\n        return null;\n    }\n  }\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault()\n    ev.persist();\n    \n    // collect all the form data into a single packaged object\n    let formData = {};\n    for(let i = 0; i < ev.target.length - 1; i++) {\n      formData[ev.target[i].name] = (ev.target[i].value)\n    }\n    \n    login(formData).then(res => { // res contains authorized user and JWT\n      if (!res.error) { // if response contains no errors\n        // handle login at App.js\n        props.handleLogin(res);\n        // ! After logging in but before loading account page, set user state\n        // after login, redirect user to homepage \n        props.history.push('/')\n      } else { // if error found\n        // set error state to true\n        setError(true);\n        console.log(\"login failed\")\n      }\n    })\n  }\n\n  return (\n    <Container>  \n      <h3>Log In</h3>\n\n      <Form onSubmit={ev => handleSubmit(ev)}>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={ev => handleChange(ev)}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={ev => handleChange(ev)}/>\n        </Form.Group>\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </Container>\n  )\n}\n\nexport default Login;","import { API_ROOT, auth_headers } from './api';\n\n// login creates a new authorization (POST), \n// returns json object constaining authorized user and jwt\nexport const login = formData => {\n  console.log(\"logging in\")\n  return (\n    fetch(`${API_ROOT}/auth`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json'\n      }, \n      body: JSON.stringify(formData)\n    }) \n    .then(res => res.json())\n  )\n}\n\n// getCurrentUser fetches (GET) the user that was authorized\n// return json object containing user id and email\nexport const getCurrentUser = token => {\nreturn (\n    fetch(`${API_ROOT}/current_user`, auth_headers(token))\n    .then(res => {\n      return res.json()\n    })\n  )\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar'\nimport EventDashboard from './components/event/EventDashboard'\nimport EventProfile from './components/event/EventProfile'\nimport Home from './containers/Home'\nimport Account from './components/profile/Account'\nimport RelationshipsList from './components/relationship/RelationshipsList'\nimport RelationshipProfile from './components/relationship/RelationshipProfile'\nimport SignUp from './components/user/Signup'\nimport Login from './components/user/Login'\nimport {getRelationships, getRelationship} from './services/relationshipsApi'\nimport {getEvents} from './services/eventsApi'\nimport {getCurrentUser} from './services/authApi'\nimport './styles.css'\nconst ROOT_PATH = \"/stay-connected\"\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      auth: {\n        user: {}\n      },\n      events: {\n        future_events: [],\n        past_events: []\n      },\n      relationships: [], \n      eventView: {},\n      relationshipView: {}\n    }\n  }\n  \n  // after component mounts, check if token is in local storage\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // console.log(\"found a token!\")\n      \n      // in case page is refreshed, instead of state returning to a blank slate\n      // use token to get current user and set current user state\n      getCurrentUser(token)\n      .then(user => { \n        const updatedState = {...this.state.auth, user: user[\"user\"]};\n        this.setState({auth: updatedState});\n        getRelationships(token, this.handleSetState);\n        getEvents(token, this.handleSetState);\n      })\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.events !== prevState.events) {\n      const token = localStorage.getItem('token');\n      getRelationships(token, this.handleSetState);\n      getRelationship(this.state.relationshipView, this.viewRelationship);\n    }\n  }\n  // handleSetState checks data for certain properties to determine which field in state to set data to\n  handleSetState = data => {\n    // * event data is an object, while relationship data is an array\n    if (Array.isArray(data)) {\n      this.setState({relationships: data})\n    } else {\n      this.setState({events: data}) \n    }\n  }\n  \n  // handles login in Login component\n  login = data => {\n    \n    // create updated this.state.auth using auth POST response data containing user and JWT\n    const updatedState = {...this.state.auth, user: data.user};\n    \n    // save JWT to local storage\n    const token = data.jwt\n    localStorage.setItem('token', token);\n    \n    // replace state.auth\n    this.setState({auth: updatedState});\n    // fetch relationships and events and set respective state\n    getRelationships(token, this.handleSetState);\n    getEvents(token, this.handleSetState);\n  }\n  \n  logout = () => {\n    // console.log('logging out')\n    // remove token from local storage\n    localStorage.removeItem('token');\n    // clear state\n    this.setState({auth: {user: {}} })\n  }\n  \n  handleNewEvent = newEvent => {\n    let events = [...this.state.events.future_events, newEvent].sort((a,b) => b.start_date > a.start_date ? -1 : 1);\n    this.setState({events: {...this.state.events, future_events: events}});\n    this.setState({eventView: newEvent});\n  }\n  \n  updateEvents = event => {\n    if (Array.isArray(event)) { //if the arg is an array from relationship profile events list\n      this.setState({events: event})\n    } else { // if the arg is an object from all events dashboard\n      let futureEvents = this.state.events.future_events.map(ev => event.id === ev.id ? event : ev)\n      let events = {...this.state.events, future_events: futureEvents}\n      this.setState({events: events, eventView: event})\n    }\n  }\n  \n  handleDeletedEvent = updatedEvents => {\n    this.setState({events: updatedEvents})\n  }\n  \n  viewEvent = event => {\n    this.setState({eventView: event})\n  }\n  \n  handleNewRelationship = (newRelationship) => {\n    this.setState({relationships: [newRelationship, ...this.state.relationships]})\n    this.setState({relationshipView: newRelationship})\n  }\n  \n  viewRelationship = (person) => {\n    this.setState({relationshipView: person})\n  }\n  \n  updateRelationships = relationship => {\n    let relationships = this.state.relationships.map(rel => rel.id === relationship.id ? relationship : rel)\n    this.setState({relationships: relationships})\n  }\n  \n  handleDeletedRelationship = updatedRelationships => {\n    this.setState({relationships: updatedRelationships})\n  }\n  \n  updateUserProfile = data => {\n    this.setState({auth: {user: data.user}})\n  }\n  \n  render() {\n    return(\n      <div className=\"app\">\n      <Router>\n        <Navbar handleLogout={this.logout} />\n        <Route path={`${ROOT_PATH}/account`} render={() => <Account user={this.state.auth.user} events={this.state.events} updateUserProfile={this.updateUserProfile} />} />\n        \n        {/* All and specific events */} \n        {/* ? do we need to in include relationships data in this component? YES, we do -- for the form data. */}\n        <Route path=\"/events\" \n          render={ (browserHistory) => <EventDashboard\n            {...browserHistory}\n            userId={this.state.auth.user.id}\n            events={this.state.events} \n            relationships={this.state.relationships} \n            handleNewEvent={this.handleNewEvent} \n            viewEvent={this.viewEvent}\n            updateEvents={this.updateEvents}\n            handleDeletedEvent={this.handleDeletedEvent}\n            viewRelationship={this.viewRelationship}\n            updateRelationships={this.updateRelationships}\n        /> } />\n\n        <Route path='/event/:name' render={ () => <EventProfile event={this.state.eventView} />} />\n\n        {/* All relationships */}\n        <Route path=\"/relationships\" exact \n          render={() => <RelationshipsList \n            userId={this.state.auth.user.id}\n            relationships={this.state.relationships} \n            handleNewRelationship={this.handleNewRelationship} \n            viewRelationship={this.viewRelationship}\n            updateRelationships={this.updateRelationships}\n            handleDeletedRelationship={this.handleDeletedRelationship}\n            updateEvents={this.updateEvents}\n            /> } \n        />\n\n        <Route path=\"/relationships/:id\" \n          render={ () => <RelationshipProfile \n            userId={this.state.auth.user.id}\n            relationship={this.state.relationshipView}\n            relationships={this.state.relationships}\n            viewRelationship={this.viewRelationship}\n            updateRelationships={this.updateRelationships}\n            handleNewEvent={this.handleNewEvent} \n            handleDeletedEvent={this.handleDeletedEvent}\n            viewEvent={this.viewEvent}\n            updateEvents={this.updateEvents}\n            events={this.state.events}\n            /> } \n        />\n\n        <Route path={`${ROOT_PATH}/signup`} component={SignUp}/>\n        <Route path={`${ROOT_PATH}/login`} render={props => <Login {...props} handleLogin={this.login} /> } />\n        <Route path={`${ROOT_PATH}/logout`} component={Home}/>\n        <Route path={ROOT_PATH} render={() => <Home user={this.state.auth.user.email} /> } /> \n\n      </Router>\n    </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}